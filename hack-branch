#!/usr/bin/env python
import sys, os, re
from subprocess import check_output

if len(sys.argv) > 2:
  print "usage: " + sys.argv[0] + " [<branch-like>]"
  sys.exit(1)

branch = sys.argv[1] if len(sys.argv) == 2 else None
dothack = os.path.expandvars("$HOME/.hack")
if not branch and os.path.exists(dothack): branch = open(dothack).read().strip()
if not branch:
  print "Create ~/.hack with a branchname to call " + sys.argv[0] + " without an argument"
  sys.exit(1)

if branch == "snippet" or branch == "macrosnippet":
  relevant = filter(lambda actual: actual.startswith(branch), check_output(["hack-homes", "--short-branches"]).splitlines())
  next_index = max(map(lambda relevant: int(relevant[len(branch):]), relevant)) + 1 if relevant else 0
  branch = "scalamacros:topic/" + branch + str(next_index).zfill(2)

if not ":" in branch:
  hardcoded = ["master", "2.10.x", "paradise/macros"]
  if not branch in hardcoded:
    prefix = "ticket" if re.match("^\d+$", branch) else "topic"
    branch = prefix + "/" + branch
  branch = "scalamacros:" + branch

print branch
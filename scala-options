#!/usr/bin/env python
import os, sys, glob
from subprocess import check_output, call, check_call, Popen, PIPE

program_name = os.path.basename(sys.argv[0])
scalac = program_name == "scalac-options"
repl = program_name == "scala-options"
fsc = program_name == "fsc-options"
scaladoc = program_name == "scaladoc-options"
scalap = program_name == "scalap-options"
partest = program_name == "partest-options"
options = sys.argv[1:]
git_root = Popen(["git", "rev-parse", "--show-toplevel"], stdout=PIPE, stderr=PIPE).communicate()[0][:-1]
is210 = not "jline-2.11.jar" in check_output(["scala-toolcp"])
is211 = not is210

classpath = ["."] # it looks like scalac doesn't merge multiple -cp switches, so we have to do this
while "-cp" in options:
  i = options.index("-cp")
  classpath[0] = options[i + 1]
  del options[i]
  del options[i]

def append_plugin(dir, name):
  def latest_jar_in(dir):
    jars = glob.glob(os.path.join(dir, "*/*.jar"))
    jars = filter(lambda jar: not "-source" in jar, jars)
    jars = filter(lambda jar: not "-javadoc" in jar, jars)
    jars.sort(key=lambda jar: os.path.getmtime(jar))
    return jars[-1] if len(jars) > 0 else None
  plugindir = os.path.join(os.path.abspath(dir), "plugin/target")
  if not "-Ystop-after:parser" in options: # this prevents a crash due to a bug in Global that I have no idea how to work around
    pluginjar = latest_jar_in(plugindir)
    if pluginjar:
      options.append("-Xplugin:" + pluginjar)
      if name == "macroparadise" and "Paradise210" in dir:
        quasiquotedir = os.path.join(os.path.abspath(dir), "quasiquotes/target")
        classpath.append(latest_jar_in(quasiquotedir) or "missing quasiquote lib")
      if name == "dsl-paradise":
        classpath.append(pluginjar)
      print "-Xplugin-require:" + name
    else:
      print >> sys.stderr, "no " + name + " plugin found in " + plugindir

def append_paradise_plugin(dir):
  append_plugin(dir, "macroparadise")
  global options
  options = map(lambda opt: opt if opt != "-Yquasiquote-debug" else "-P:macroparadise:-Yquasiquote-debug", options)

def append_dslparadise_plugin(dir):
  append_plugin(dir, "dsl-paradise")

# automatically enable the paradise plugin if in relevant directory
if not "fatal: " in git_root and os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Paradise"):
  append_paradise_plugin(git_root)

# automatically enable the dsl paradise plugin if in relevant directory
if not "fatal: " in git_root and os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/dsl-paradise"):
  append_dslparadise_plugin(git_root)
  # pass

# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/copy-untyped"):
#   append_paradise_plugin("/Users/xeno_by/Projects/Paradise211x")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Master"):
#   append_paradise_plugin("/Users/xeno_by/Projects/Paradise211x")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/210x"):
#   append_paradise_plugin("/Users/xeno_by/Projects/Paradise210x")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Master"):
#   classpath.append("/Users/xeno_by/Projects/scala-blitz/target/scala-2.11.0-SNAPSHOT/classes")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/210x"):
#   classpath.append("/Users/xeno_by/Projects/async/target/scala-2.10/scala-async_2.10-0.9.0-SNAPSHOT.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Paradise2103"):
#   classpath.append("/Users/xeno_by/Projects/updatable/target/scala-2.10/updatable_2.10-0.7.1-20140117165401-dc32f87a10b9ad053463b0de04988b83f9378425.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Master"):
#   classpath.append("/Users/xeno_by/Projects/shapeless/core/target/scala-2.11.0-SNAPSHOT/shapeless_2.11.0-SNAPSHOT-2.0.0-SNAPSHOT.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Scala2110M7"):
#   classpath.append("/Users/xeno_by/Projects/shapeless/core/target/scala-2.11.0-M7/shapeless_2.11.0-M7-2.0.0-SNAPSHOT.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Scala2110M7"):
#   classpath.append("/Users/xeno_by/Documents/specs2-common_2.11.0-M7-2.4-SNAPSHOT.jar")
#   classpath.append("/Users/xeno_by/Documents/specs2-core_2.11.0-M7-2.4-SNAPSHOT.jar")
#   classpath.append("/Users/xeno_by/Documents/specs2-matcher_2.11.0-M7-2.4-SNAPSHOT.jar")
#   classpath.append("/Users/xeno_by/.ivy2/cache/org.scalaz/scalaz-core_2.11.0-M7/bundles/scalaz-core_2.11.0-M7-7.0.5.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Master"):
#   # classpath.append("/Users/xeno_by/Documents/specs2_2.11.0-M8-2.4-SNAPSHOT.jar")
#   classpath.append("/Users/xeno_by/Projects/specs2/target/scala-2.11.0-M8/specs2_2.11.0-M8-2.4-SNAPSHOT.jar")
#   classpath.append("/Users/xeno_by/.ivy2/cache/org.scalaz/scalaz-core_2.11.0-M8/bundles/scalaz-core_2.11.0-M8-7.0.5.jar")
# if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/210x"):
#   classpath.append("/Users/xeno_by/.ivy2/cache/org.scalatest/scalatest_2.10.0-M4/jars/scalatest_2.10.0-M4-1.9-2.10.0-M4-B2.jar")
if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/8209"):
  classpath.append("/Users/xeno_by/Projects/shapeless/core/target/scala-2.11.0-SNAPSHOT/shapeless_2.11.0-SNAPSHOT-2.0.0-SNAPSHOT.jar")

if os.environ.get("SCALAC_OPTS"):
  # TODO: tokenize this correctly
  scalac_opts = os.environ["SCALAC_OPTS"].split(" ")
  options += scalac_opts

if repl and not any(option.endswith(".scala") for option in options) and not "fos-2013-grading" in git_root:
  options.append("-language:experimental.macros")

if not partest and not git_root.startswith("/Users/xeno_by/Projects/fos-"):
  options.append("-deprecation")
  options.append("-feature")

# TODO: doesn't look like this works well with partest
# if partest and not is210:
#   options.append("-optimize")

if classpath != ["."]:
  print "-cp"
  print ":".join(classpath)

for opt in options:
  print opt

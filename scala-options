#!/usr/bin/env python
import os, sys, glob
from subprocess import check_output, call, check_call, Popen, PIPE

program_name = os.path.basename(sys.argv[0])
scalac = program_name == "scalac-options"
scala = program_name == "scala-options"
fsc = program_name == "fsc-options"
scaladoc = program_name == "scaladoc-options"
scalap = program_name == "scalap-options"
partest = program_name == "partest-options"
options = sys.argv[1:]

def append_paradise_plugin_from(dir):
  global options
  jardir = os.path.join(os.path.abspath(dir), "plugin/target")
  jars = glob.glob(os.path.join(jardir, "*/*.jar"))
  jars.sort(key=lambda jar: os.path.getmtime(jar))
  if not "-Ystop-after:parser" in options: # this prevents a crash due to a bug in Global that I have no idea how to work around
    if jars:
      options.append("-Xplugin:" + jars[-1])
      print "-Xplugin-require:macroparadise"
    else:
      print >> sys.stderr, "no paradise plugin found in " + jardir
    options = map(lambda opt: opt if opt != "-Yquasiquote-debug" else "-P:macroparadise:-Yquasiquote-debug", options)

# automatically enable the paradise plugin if in relevant directory
git_root = Popen(["git", "rev-parse", "--show-toplevel"], stdout=PIPE, stderr=PIPE).communicate()[0][:-1]
if not "fatal: " in git_root and os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Paradise"):
  append_paradise_plugin_from(git_root)

if os.path.abspath(git_root).startswith("/Users/xeno_by/Projects/Master"):
  append_paradise_plugin_from("/Users/xeno_by/Projects/ParadiseMaster")

if scalac or scala:
  options.append("-language:experimental.macros")

for opt in options:
  print opt


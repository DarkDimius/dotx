#!/usr/bin/env python
from subprocess import call
import os, sys, re, json, urllib2, traceback

if len(sys.argv) > 1:
  print "usage: " + sys.argv[0]
  sys.exit(1)

def growl(message):
  call(["growlnotify", "-n", "Jenkins", "-m", message])

def on_failure(url):
  call(["partest-import", url])

try:
  with open(os.path.expandvars("$HOME/.jenkins"), "r") as f:
    config = json.load(f)
except Exception as e:
  config = []

new_jobs = []
anything_new = False
for job in jobs:
  if job:
    try:
      data = urllib2.urlopen(job + "/api/json").read()
      data = json.loads(data)
      result = data["result"]
      if result:
        anything_new = True
        msg = result + ": " + job
        growl(msg)
        print msg
        if result == "FAILURE": on_failure(job)
      else:
        failures = subprocess.Popen(["jenkins-failures", job], stdout=subprocess.PIPE).communicate()[0].splitlines()
        if failures:
          anything_new = True
          msg = "FAILURE: " + job
          growl(msg)
          print msg
          on_failure(job)
        else:
          new_jobs.append(job)
    except:
      _, value, _ = sys.exc_info()
      msg = job + ": " + str(value)
      # growl(msg)
      print msg
      new_jobs.append(job)

if not anything_new:
  print "Nothing new"

with open(os.path.expandvars("$HOME/.jenkins"), "w") as f:
  json.dump(f, sort_keys=True, indent=4)

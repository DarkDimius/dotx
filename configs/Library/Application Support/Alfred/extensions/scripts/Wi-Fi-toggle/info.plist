<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>action</key>
	<false/>
	<key>category</key>
	<string>SCRIPTS</string>
	<key>command</key>
	<string>#Function to search keychain for the network password
get_pw () {
 if [ "$1" ]
 then
  security 2&gt;&amp;1 &gt;/dev/null  find-generic-password -ga AirPort -l "$1" | cut -d '"' -f 2 | grep -v security:
 fi
}
#Find the device name
DEVICE=$(networksetup -listallhardwareports | grep -A 2 -E "AirPort|Wi-Fi" | grep -m 1 -o -e en[0-9]);
#Toggle or change network?
case "{query}" in
"")
 #Toggle the power of the Wi-Fi/Airport
 if [ $(networksetup -getairportpower $DEVICE | grep -c On) == 0 ]
 then
  networksetup -setairportpower $DEVICE On
  echo "Wi-Fi enabled.";
 else
  networksetup -setairportpower $DEVICE Off
  echo "Wi-Fi disabled.";
 fi
;;
"?")
  echo $(networksetup -getairportnetwork $DEVICE)
  echo
  networksetup -getinfo Wi-Fi
;;
*)
 #Change network - Make sure that the Airport is on
 if [ $(networksetup -getairportpower $DEVICE | grep -c On) == 0 ]
 then
  networksetup -setairportpower $DEVICE On
 fi
 #Fuzzy match to known networks
 NETWORK=$(networksetup -listpreferredwirelessnetworks en1 | egrep -im 1 "[[:alnum:]]*{query}[[:alnum:]]*$");
 #If a match is found - try to connect to Network
 if [ -z "$NETWORK" ]
 then
  echo "Unable to match \"{query}\" to a know network.";
 else
  ERROR=$(networksetup -setairportnetwork en1 "$(echo $NETWORK)" $(get_pw "$(echo $NETWORK)") );
  if [ -z "$ERROR" ]
  then
   echo "Successfully connected to network $NETWORK.";
  else
   echo $ERROR;
  fi
 fi
;;
esac
</string>
	<key>disabled</key>
	<false/>
	<key>escapequery</key>
	<false/>
	<key>escapequerybackquotes</key>
	<false/>
	<key>escapequerybrackets</key>
	<false/>
	<key>escapequeryquotes</key>
	<true/>
	<key>escapequerysemicolons</key>
	<false/>
	<key>growloutput</key>
	<true/>
	<key>growloutputsticky</key>
	<false/>
	<key>keyword</key>
	<string>wifi</string>
	<key>logging</key>
	<false/>
	<key>parameter</key>
	<integer>2</integer>
	<key>silent</key>
	<true/>
	<key>subtitle</key>
	<string>Turn Wi-Fi On/Off</string>
	<key>title</key>
	<string>Toggle Wi-Fi</string>
</dict>
</plist>
